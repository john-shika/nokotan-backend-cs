using Microsoft.AspNetCore.Authentication;
using Microsoft.AspNetCore.OpenApi;
using Microsoft.OpenApi.Models;
using NokoWebApiSdk.Cores;
using NokoWebApiSdk.Cores.Utils;
using NokoWebApiSdk.OpenApi.Extensions;

namespace NokoWebApiSdk.OpenApi.Transformers;

public sealed class AutoGenerateDescriptionTransformer(IAuthenticationSchemeProvider authenticationSchemeProvider) : IOpenApiDocumentTransformer
{
    private static INokoWebLogger Logger => new NokoWebLogger();
    
    public async Task TransformAsync(OpenApiDocument document, OpenApiDocumentTransformerContext context, CancellationToken cancellationToken)
    {
        document.Preload();
        
        foreach (var (path, item) in document.Paths)
        {
            foreach (var (operationType, operation) in item.Operations)
            {
                if (NokoWebCommonMod.IsNoneOrEmptyWhiteSpace(operation.Summary)) continue;
                Logger.Warning($"Set Description On Method: {operationType}, Path: '{path}'");
                var value = NokoWebCommonMod.EndsCut(operation.Summary.Trim(), ".");
                var summary = NokoWebTransformText.ToTitleCase(value.ToLower());
                var description = summary.EndsWith("Endpoint") ? summary : $"{summary} Endpoint";
                operation.Summary = summary;
                operation.Description ??= $"Description: {description}.";
            }
        }
    }
}